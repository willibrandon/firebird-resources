@using FirebirdResource.ApiService;

@page "/catalog"
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]

@inject CatalogApiClient CatalogApi

<PageTitle>Catalog</PageTitle>

<h1>Catalog Brands</h1>

<p>This component demonstrates showing data loaded from a backend API service.</p>

@if (brands == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
@*                 <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th> *@
            </tr>
        </thead>
        <tbody>
            @foreach (var brand in brands)
            {
                <tr>
                    <td>@brand.Brand</td>
                    @* <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td> *@
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private CatalogBrand[]? brands;

    protected override async Task OnInitializedAsync()
    {
        brands = await CatalogApi.GetBrandsAsync();
    }
}
